[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/i-tried-predicting-college-basketball-without-watching-college-basketball/index.html",
    "href": "posts/i-tried-predicting-college-basketball-without-watching-college-basketball/index.html",
    "title": "I tried predicting college basketball without watching college basketball",
    "section": "",
    "text": "The only experience I have with college basketball is watching the Husker Men’s Basketball team lose a couple of times a week. Then, Matt had us make a March Madness bracket. There’s only word I can use to describe this experience: yikes.\nWhile I can add everything that wins games, there’s always the human element where the expected winners choke. cough cough Purdue cough cough\nI felt confident with my bracket when I saw 3/4 teams in my Final Four bracket were number one in their regions. However, my hopes and my machine learning algorithms hopes dimished after all number one teams were out before the Elite 8.\nI thought my bracket was okay considering there upsets predicted that seemed somewhat plausible, yet it NEVER could have predicted this.\nWhat you’ll find below is my post mortem and an attempt to figure out what I did wrong. If anything did. The code I used to help make these predictions relied on hoopR and tidymodels.\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(bonsai)\nlibrary(gt)\nset.seed(1234)\n\ngames &lt;- load_mbb_team_box(2015:2023) %&gt;%\n  filter(game_date &lt; as.Date(\"2023-03-13\"))\nplayers &lt;-load_mbb_player_box(2015:2023) %&gt;%\n  filter(game_date &lt; as.Date(\"2023-03-13\"))\nschedule &lt;- load_mbb_schedule(2015:2023) %&gt;%\n  filter(game_date &lt; as.Date(\"2023-03-13\"))\n\n\ngameswithpossessions &lt;- games %&gt;%\n  mutate(\n    possessions = round(field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),digits = 0),\n    points_per_100 = (team_score/possessions)*100\n) %&gt;%\n  filter(possessions &lt;= 90 & possessions &gt;= 53)\n\nplayervalues &lt;- players %&gt;%\n   filter(minutes &gt; 0) %&gt;%\n  mutate(\n    value = points + rebounds + assists + steals + blocks - turnovers - (field_goals_attempted - field_goals_made) - (free_throws_attempted - free_throws_made)\n  ) %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  summarize(\n    games = n(),\n    team_player_average_value = mean(value),\n    standard_dev = sd(value),\n    team_median_player_value = median(value)\n  ) %&gt;% \n  arrange(desc(team_player_average_value))\n\ngameswithpossessions &lt;- gameswithpossessions %&gt;% inner_join(playervalues)\n\nrollingteamstats &lt;- gameswithpossessions %&gt;% \n  arrange(game_date) %&gt;%\n group_by(team_short_display_name, season) %&gt;%\n  mutate(\n  team_score = ((field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n  team_rolling_ppp = rollmean(lag(points_per_100, n=1), k=5, align=\"right\", fill=NA),\n  team_rolling_median_value = rollmean(lag(team_median_player_value, n=1), k=5, align=\"right\", fill=NA),\n  team_cumulative_ppp = lag(cummean(points_per_100), n=1),\n  team_rolling_fgpct = rollmean(lag(field_goal_pct, n=1), k=5, align=\"right\", fill=NA),\n  team_rolling_steals = rollmean(lag(steals, n=1), k=5, align=\"right\", fill=NA),\n  team_rolling_turnovers = rollmean(lag(turnovers, n=1), k=5, align=\"right\", fill=NA),\n  team_rolling_fouls = rollmean(lag(fouls, n=1), k=5, align=\"right\", fill=NA)\n  ) %&gt;%\n  ungroup()\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season,\n    team_score, \n    team_rolling_ppp,\n    team_rolling_median_value,\n    team_cumulative_ppp,\n    team_rolling_fgpct,\n    team_rolling_steals,\n    team_rolling_turnovers,\n    team_rolling_fouls,\n    offensive_rebounds,\n    defensive_rebounds\n    ) %&gt;% \nrename(\n  team_offensive_rebounds = offensive_rebounds,\n  team_defensive_rebounds = defensive_rebounds,\n) %&gt;%\n  na.omit()\n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_median_value = team_rolling_median_value,\n    opponent_cumulative_ppp = team_cumulative_ppp,\n    opponent_rolling_fgpct = team_rolling_fgpct,\n    opponent_rolling_steals = team_rolling_steals,\n    opponent_rolling_turnovers = team_rolling_turnovers,\n    opponent_rolling_fouls = team_rolling_fouls,\n    opponent_offensive_rebounds = team_offensive_rebounds,\n    opponent_defensive_rebounds = team_defensive_rebounds\n  ) \n\ngameswithsides &lt;- team_side %&gt;% inner_join(opponent_side)\n\ngameswithsides &lt;- gameswithsides %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n  )),\nteam_offensive_rebound_factor = team_offensive_rebounds / (team_offensive_rebounds + opponent_defensive_rebounds),\nopponent_offensive_rebound_factor = opponent_offensive_rebounds / (opponent_offensive_rebounds + team_defensive_rebounds),\nteam_rolling_offensive_rebound_factor = rollmean(lag(team_offensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA),\nopponent_rolling_offensive_rebound_factor = rollmean(lag(opponent_offensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA\n),\nteam_defensive_rebound_factor = team_defensive_rebounds / (team_defensive_rebounds + opponent_offensive_rebounds),\nopponent_defensive_rebound_factor = opponent_defensive_rebounds / (opponent_defensive_rebounds + team_offensive_rebounds),\nteam_rolling_defensive_rebound_factor = rollmean(lag(team_defensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA),\nopponent_rolling_defensive_rebound_factor = rollmean(lag(opponent_defensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA\n) ) %&gt;% \nna.omit()\n\nlevels(gameswithsides$team_result)\n\n\n[1] \"L\" \"W\"\n\n\nCode\ngameswithsides$team_result &lt;- relevel(gameswithsides$team_result, ref=\"W\")\n\nlevels(gameswithsides$team_result)\n\n\n[1] \"W\" \"L\"\n\n\nCode\nmodelgames &lt;- gameswithsides %&gt;% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_median_value,\n    opponent_rolling_median_value,\n    team_cumulative_ppp,\n    opponent_rolling_ppp,\n    team_rolling_fgpct,\n    opponent_rolling_fgpct,\n    team_rolling_steals,\n    opponent_rolling_steals,\n    team_rolling_turnovers,\n    opponent_rolling_turnovers,\n    team_rolling_fouls,\n    opponent_rolling_fouls,\n    team_rolling_offensive_rebound_factor,\n    opponent_rolling_offensive_rebound_factor,\n    team_rolling_defensive_rebound_factor,\n    opponent_rolling_defensive_rebound_factor,\n    team_result\n    ) %&gt;% na.omit()\n\n\nFor my predictors, I decided to focus solely on rolling factors. What does that mean? I decided to focus on parts of games I thought won games and find the average of the season of those statistics. That includes field goal percentage, turnovers, steals and more. Obviously, this did not work out well for me. Maybe I had too many, maybe I didn’t use these stats the right way. Either way, my mind thought these factors would lead me to a successful bracket.\n\n\nCode\ngame_split &lt;- initial_split(modelgames, prop = .8)\ngame_train &lt;- training(game_split)\ngame_test &lt;- testing(game_split)\n\ngame_recipe &lt;- \n  recipe(team_result ~ ., data = game_train) %&gt;% \n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\")\n\nsummary(game_recipe) %&gt;%\n  select(variable, role) %&gt;% \n  filter(role != \"ID\") %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"The Deciding Factors\",\n    subtitle = \"A mix of what I thought won college basketball games.\"\n  ) %&gt;%  \n  tab_source_note(\n    source_note = md(\"**By:** Kylee Sodomka\")\n  ) %&gt;% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %&gt;% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %&gt;%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %&gt;%\n  opt_row_striping() %&gt;% \n  opt_table_lines(\"none\")\n\n\n\n\n\n\n  \n    \n      The Deciding Factors\n    \n    \n      A mix of what I thought won college basketball games.\n    \n  \n  \n    \n      variable\n      role\n    \n  \n  \n    team_rolling_ppp\npredictor\n    opponent_rolling_ppp\npredictor\n    team_rolling_median_value\npredictor\n    opponent_rolling_median_value\npredictor\n    team_cumulative_ppp\npredictor\n    team_rolling_fgpct\npredictor\n    opponent_rolling_fgpct\npredictor\n    team_rolling_steals\npredictor\n    opponent_rolling_steals\npredictor\n    team_rolling_turnovers\npredictor\n    opponent_rolling_turnovers\npredictor\n    team_rolling_fouls\npredictor\n    opponent_rolling_fouls\npredictor\n    team_rolling_offensive_rebound_factor\npredictor\n    opponent_rolling_offensive_rebound_factor\npredictor\n    team_rolling_defensive_rebound_factor\npredictor\n    opponent_rolling_defensive_rebound_factor\npredictor\n    team_result\noutcome\n  \n  \n    \n      By: Kylee Sodomka\n    \n  \n  \n\n\n\n\nTo make my predictions, I wanted to use a tree-based method that goes EXPONENTIALLY faster than XGBoost: LightGBM. It’s a lot faster and can be just as accurate as XGBoost as long as it’s not using small datasets.\n\n\nCode\nlightgbm_mod &lt;- \n  boost_tree() %&gt;% \n  set_engine(\"lightgbm\") %&gt;% \n  set_mode(mode = \"classification\") \n\nlightgbm_workflow &lt;- \n  workflow() %&gt;% \n  add_model(lightgbm_mod) %&gt;% \n  add_recipe(game_recipe)\n\nlightgbm_fit &lt;- \n  lightgbm_workflow %&gt;% \n  fit(data = game_train)\n\nrollingteamstats &lt;- gameswithpossessions %&gt;% \n  arrange(game_date) %&gt;%\n group_by(team_short_display_name, season) %&gt;%\n  mutate(\n  team_rolling_ppp = rollmean(points_per_100, n=1, k=5, align=\"right\", fill=NA),\n  team_rolling_median_value = rollmean(team_median_player_value, n=1, k=5, align=\"right\", fill=NA),\n  team_cumulative_ppp = cummean(points_per_100), n=1,\n  team_rolling_fgpct = rollmean(field_goal_pct, n=1, k=5, align=\"right\", fill=NA),\n  team_rolling_steals = rollmean(steals, n=1, k=5, align=\"right\", fill=NA),\n  team_rolling_turnovers = rollmean(turnovers, n=1, k=5, align=\"right\", fill=NA),\n  team_rolling_fouls = rollmean(fouls, n=1, k=5, align=\"right\", fill=NA)\n  ) %&gt;%\n  ungroup()\n\nteam_side &lt;- rollingteamstats %&gt;%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season,\n    team_score, \n    team_rolling_ppp,\n    team_rolling_median_value,\n    team_cumulative_ppp,\n    team_rolling_fgpct,\n    team_rolling_steals,\n    team_rolling_turnovers,\n    team_rolling_fouls,\n    offensive_rebounds,\n    defensive_rebounds\n    ) %&gt;% \nrename(\n  team_offensive_rebounds = offensive_rebounds,\n  team_defensive_rebounds = defensive_rebounds,\n) %&gt;%\n  na.omit()\n\nopponent_side &lt;- team_side %&gt;%\n  select(-opponent_team_id) %&gt;% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_median_value = team_rolling_median_value,\n    opponent_cumulative_ppp = team_cumulative_ppp,\n    opponent_rolling_fgpct = team_rolling_fgpct,\n    opponent_rolling_steals = team_rolling_steals,\n    opponent_rolling_turnovers = team_rolling_turnovers,\n    opponent_rolling_fouls = team_rolling_fouls,\n    opponent_offensive_rebounds = team_offensive_rebounds,\n    opponent_defensive_rebounds = team_defensive_rebounds\n  )\ngameswithsides &lt;- team_side %&gt;% inner_join(opponent_side)\n\ngameswithsides &lt;- gameswithsides %&gt;% mutate(\n  team_result = as.factor(case_when(\n    team_score &gt; opponent_score ~ \"W\",\n    opponent_score &gt; team_score ~ \"L\"\n  )),\nteam_offensive_rebound_factor = team_offensive_rebounds / (team_offensive_rebounds + opponent_defensive_rebounds),\nopponent_offensive_rebound_factor = opponent_offensive_rebounds / (opponent_offensive_rebounds + team_defensive_rebounds),\nteam_rolling_offensive_rebound_factor = rollmean(lag(team_offensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA),\nopponent_rolling_offensive_rebound_factor = rollmean(lag(opponent_offensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA\n),\nteam_defensive_rebound_factor = team_defensive_rebounds / (team_defensive_rebounds + opponent_offensive_rebounds),\nopponent_defensive_rebound_factor = opponent_defensive_rebounds / (opponent_defensive_rebounds + team_offensive_rebounds),\nteam_rolling_defensive_rebound_factor = rollmean(lag(team_defensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA),\nopponent_rolling_defensive_rebound_factor = rollmean(lag(opponent_defensive_rebound_factor, n=1), k=10, align=\"right\", fill=NA\n) ) %&gt;% \nna.omit()\n\nlevels(gameswithsides$team_result)\n\n\n[1] \"L\" \"W\"\n\n\nCode\ngameswithsides$team_result &lt;- relevel(gameswithsides$team_result, ref=\"W\")\n\nlevels(gameswithsides$team_result)\n\n\n[1] \"W\" \"L\"\n\n\nCode\nmodelgames &lt;- gameswithsides %&gt;% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_median_value,\n    opponent_rolling_median_value,\n    team_cumulative_ppp,\n    opponent_rolling_ppp,\n    team_rolling_fgpct,\n    opponent_rolling_fgpct,\n    team_rolling_steals,\n    opponent_rolling_steals,\n    team_rolling_turnovers,\n    opponent_rolling_turnovers,\n    team_rolling_fouls,\n    opponent_rolling_fouls,\n    team_rolling_offensive_rebound_factor,\n    opponent_rolling_offensive_rebound_factor,\n    team_rolling_defensive_rebound_factor,\n    opponent_rolling_defensive_rebound_factor,\n    team_result\n    ) %&gt;% na.omit()\n\nfirst4games &lt;- tibble(\n  team_short_display_name=\"Texas A&M-CC\",\n  opponent_short_display_name=\"SE Missouri St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Mississippi St\",\n  opponent_short_display_name=\"Pittsburgh\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas Southern\",\n  opponent_short_display_name=\"Fair. Dickinson\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona State\",\n  opponent_short_display_name=\"Nevada\"\n)\n\nfirst4games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(first4games)\n\nfirst4games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(first4games) \n\nfirst4 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = first4games) %&gt;%\n  bind_cols(first4games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfirst4 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = first4games, type=\"prob\") %&gt;%\n  bind_cols(first4) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nround1games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"San Diego State\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n) %&gt;% add_row(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Texas Southern\"\n) %&gt;% add_row(\n  team_short_display_name=\"Memphis\",\n  opponent_short_display_name=\"FAU\"\n) %&gt;% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Providence\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas State\",\n  opponent_short_display_name=\"Montana State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Michigan State\",\n  opponent_short_display_name=\"USC\"\n) %&gt;% add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_short_display_name=\"Vermont\"\n) %&gt;% add_row(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"N Kentucky\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Auburn\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Drake\"\n) %&gt;% add_row(\n  team_short_display_name=\"Indiana\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Mississippi St\"\n) %&gt;% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kennesaw State\"\n  ) %&gt;% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Penn State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas\",\n  opponent_short_display_name=\"Colgate\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Howard\"\n) %&gt;% add_row(\n  team_short_display_name=\"Arkansas\",\n  opponent_short_display_name=\"Illinois\"\n) %&gt;% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"VCU\"\n) %&gt;% add_row(\n  team_short_display_name=\"UConn\",\n  opponent_short_display_name=\"Iona\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Nevada\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Grand Canyon\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"Boise State\"\n) %&gt;% add_row(\n  team_short_display_name=\"UCLA\",\n  opponent_short_display_name=\"UNC Asheville\"\n)\n\nround1games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(round1games)\n\nround1games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(round1games) \n\nround1 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round1games) %&gt;%\n  bind_cols(round1games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nround1 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round1games, type=\"prob\") %&gt;%\n  bind_cols(round1) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nround2games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"West Virginia\"\n) %&gt;% add_row(\n  team_short_display_name=\"Charleston\",\n  opponent_short_display_name=\"Furman\"\n) %&gt;% add_row(\n  team_short_display_name=\"NC State\",\n  opponent_short_display_name=\"UCSB\"\n) %&gt;% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Arizona\"\n) %&gt;% add_row(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Memphis\"\n) %&gt;% add_row(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Louisiana\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Montana State\"\n) %&gt;% add_row(\n  team_short_display_name=\"USC\",\n  opponent_short_display_name=\"Marquette\"\n) %&gt;% add_row(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Iowa\"\n) %&gt;% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Kent State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Xavier\"\n) %&gt;% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Colgate\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Arkansas\"\n) %&gt;% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"UConn\"\n) %&gt;% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Gonzaga\"\n) %&gt;% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"UCLA\"\n)\n\nround2games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(round2games)\n\nround2games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(round2games) \n\nround2 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round2games) %&gt;%\n  bind_cols(round2games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nround2 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round2games, type=\"prob\") %&gt;%\n  bind_cols(round2) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nround3games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Charleston\"\n) %&gt;% add_row(\n  team_short_display_name=\"NC State\",\n  opponent_short_display_name=\"Missouri\"\n) %&gt;%  add_row(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Marquette\"\n) %&gt;% add_row(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Miami\"\n) %&gt;%  add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Colgate\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Saint Mary's\"\n) %&gt;% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"UCLA\"\n) \n\nround3games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(round3games)\n\nround3games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(round3games)\n\nround3 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round3games) %&gt;%\n  bind_cols(round3games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nround3 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round3games, type=\"prob\") %&gt;%\n  bind_cols(round3) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nround4games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"NC State\"\n) %&gt;% add_row(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Kentucky\"\n) %&gt;% add_row(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Xavier\"\n) %&gt;% add_row(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Gonzaga\"\n)\n\nround4games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(round4games)\n\nround4games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(round4games)\n\nround4 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round4games) %&gt;%\n  bind_cols(round4games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nround4 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round4games, type=\"prob\") %&gt;%\n  bind_cols(round4) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nround5games &lt;- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Purdue\"\n)  %&gt;% add_row(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"Gonzaga\"\n)\n\nround5games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(round5games)\n\nround5games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(round5games)\n\nround5 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round5games) %&gt;%\n  bind_cols(round5games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nround5 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round5games, type=\"prob\") %&gt;%\n  bind_cols(round5) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nround6games &lt;- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Gonzaga\"\n) \n\nround6games &lt;- modelgames %&gt;% \n  group_by(team_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  select(-team_result, -starts_with(\"opponent\")) %&gt;% \n  right_join(round6games)\n\nround6games &lt;- modelgames %&gt;% \n  group_by(opponent_short_display_name) %&gt;% \n  filter(game_date == max(game_date) & season == 2023) %&gt;% \n  slice(1) %&gt;% \n  ungroup() %&gt;% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %&gt;% right_join(round6games)\n\nround6 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round6games) %&gt;%\n  bind_cols(round6games) %&gt;% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nround6 &lt;- lightgbm_fit %&gt;% \n  predict(new_data = round1games, type=\"prob\") %&gt;%\n  bind_cols(round6) %&gt;% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nOverall, my bracket has not been doing too hot. 9% accuracy is not good if I want to go to Vegas. However, my bracket did predict an upset I didn’t see coming, but happened. My coding did predict #6 Virginia losing to Furman. Now, Virigina was not doing well anyways, but most people thought they’d as least win one game. Depending on the region, my bracket was predicting a lot of upsets that didn’t happen all that much in the first round. However, my bracket did predict the correct outcomes for the first round in the Southwest region. If only that could’ve lasted going into the round, but that’s where more of the outcomes happened.\nBad picks is the theme of my bracket. Like I mentioned, my bracket was expecting a lot of upsets. I had NC State beating Creighton, UC Santa Barbara beating Baylor, Charleston beating San Diego State, Kent State beating Indiana and Colgate beating Texas. Yeah, that’s too many upsets. There’s no way that my bracket is this good predicting all of these. But damn, not even one? Why did Purdue have to lose first round?\n\n\nCode\ngonzaga &lt;- round1 %&gt;% filter(team_short_display_name == \"Gonzaga\")\nkansas &lt;- round1 %&gt;% filter(team_short_display_name == \"Kansas\")\npurdue &lt;- round1 %&gt;% filter(team_short_display_name == \"Purdue\")\niowa &lt;- round1 %&gt;% filter(team_short_display_name == \"Iowa\")\n\nggplot() + \n  geom_point(\n    data=round1, \n    aes(x=team_rolling_turnovers, y=opponent_rolling_turnovers), color=\"grey\") +\n  geom_point(\n    data=gonzaga,\n    aes(x=team_rolling_turnovers, y=opponent_rolling_turnovers), color=\"navy\") +\n  geom_point(\n    data=kansas,\n    aes(x=team_rolling_turnovers, y=opponent_rolling_turnovers), color=\"red\") +\n  geom_point(\n    data=purdue,\n    aes(x=team_rolling_turnovers, y=opponent_rolling_turnovers), color=\"gold\") +\n  geom_point(\n    data=iowa,\n    aes(x=team_rolling_turnovers, y=opponent_rolling_turnovers), color=\"yellow\") + \n  geom_text(aes(x=11.8, y=15.2), label=\"Kansas\") +\n  geom_text(aes(x=9.6, y=13.6), label=\"Purdue\") +\n  geom_text(aes(x=8.0, y=10.8), label=\"Gonzaga\") +\n  geom_text(aes(x=8.6, y=11.4), label=\"Iowa\") +\n  labs(title=\"Do Turnovers Predict Wins?\", subtitle=\"This scatterplot predicted the turnovers between teams for the first round games.\", x=\"Team Turnovers\", y=\"Opponent Turnovers\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nI decided to look at turnovers for my scatterplot. Turnovers are important because it means you can control the ball longer when you take it away from the opponent, but it can also bite you in the butt when your team keeps losing the ball. Unfortunately, I can’t get my data to show Furman beating Virginia. It showed it the first time, but something flipped after the games were played. This data does show my biggest losses and why I didn’t predict the underdog (and did when I shouldn’t have). Looking at my opponent rolling turnovers, the team that I predicted to turn the ball over the most was Howard against Kansas. The second, though, was Texas Southern (which turned out to be FDU) against Purdue. My code thought that Purdue was going to force a lot of turnovers. I also thought that Iowa would force Auburn to lose the ball a lot. When I looked at my team and who would have the fewest amount of turnovers (not counting Furman and whatever that’s doing), it was Gonzaga with the fewest.\n\n\nCode\ntexas &lt;- round1 %&gt;% filter(team_short_display_name == \"Texas\")\n\nggplot() + \n  geom_point(\n    data=round1, \n    aes(x=team_rolling_fgpct, y=opponent_rolling_fgpct), color=\"grey\") +\n  geom_point(\n    data=gonzaga,\n    aes(x=team_rolling_fgpct, y=opponent_rolling_fgpct), color=\"navy\") +\n  geom_point(\n    data=texas,\n    aes(x=team_rolling_fgpct, y=opponent_rolling_fgpct), color=\"orange\") + \n  geom_text(aes(x=55.11, y=52.50), label=\"Gonzaga\") +\n  geom_text(aes(x=42.52, y=52.84), label=\"Texas\") +\n  labs(title=\"What about field goal percentage?\", subtitle=\"Maybe a team's field goal percentage can predict who will win.\", x=\"Team Field Goal Percentage\", y=\"Opponent Field Goal Percentage\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\nWarning: Removed 5 rows containing missing values (`geom_point()`).\n\n\n\n\n\nI also wanted to look at my rolling field goal percentage to see if that determined my greatest losses. My bracket said that Colgate was going to beat Texas. Colgate’s rolling field goal percentage was supposed to 53.22%. Texas was at 41.52%. Damn. How wrong I was with this. However, Gonzaga’s game had Grand Canyon having the second highest opponent rolling field goal percentage. Gonzaga had them beat thought at 55.12%.\n\n\nCode\ngames &lt;- load_mbb_team_box(2023) %&gt;%\n    filter(game_date &gt; as.Date(\"2023-03-15\")) %&gt;%\n    filter(game_date &lt; as.Date(\"2023-03-18\"))\n\ngames %&gt;%\n  select(team_display_name, field_goal_pct, total_turnovers) %&gt;%\ngt() %&gt;% \n  cols_label(\n    team_display_name = \"Team\",\n    field_goal_pct = \"Field Goal Percentage\",\n    total_turnovers = \"Total Turnovers\"\n    ) %&gt;%\n  tab_header(\n    title = \"Let's compare the predicted numbers side-by-side\",\n    subtitle = \"This shows the numbers/percentages of field goal percentage and turnovers right next to each other for each team.\"\n  ) %&gt;%  \n  tab_source_note(\n    source_note = md(\"**By:** Kylee Sodomka\")\n  ) %&gt;% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %&gt;% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %&gt;%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %&gt;%\n  opt_row_striping() %&gt;% \n  opt_table_lines(\"none\") %&gt;%\n  tab_style(\n    style = list(\n      cell_fill(color = \"navy\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = team_display_name == \"Gonzaga Bulldogs\")\n  ) %&gt;%\n  tab_style(\n    style = list(\n      cell_fill(color = \"purple\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = team_display_name == \"Grand Canyon Lopes\")\n  ) %&gt;%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gold\"),\n      cell_text(color = \"black\")\n      ),\n    locations = cells_body(\n      rows = team_display_name == \"Purdue Boilermakers\")\n  ) %&gt;%\n  tab_style(\n    style = list(\n      cell_fill(color = \"red\"),\n      cell_text(color = \"blue\")\n      ),\n    locations = cells_body(\n      rows = team_display_name == \"Fairleigh Dickinson Knights\")\n  ) %&gt;%\n  tab_style(\n    style = list(\n      cell_fill(color = \"maroon\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = team_display_name == \"Colgate Raiders\")\n  ) %&gt;%\n  tab_style(\n    style = list(\n      cell_fill(color = \"orange\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = team_display_name == \"Texas Longhorns\")\n  )\n\n\n\n\n\n\n  \n    \n      Let's compare the predicted numbers side-by-side\n    \n    \n      This shows the numbers/percentages of field goal percentage and turnovers right next to each other for each team.\n    \n  \n  \n    \n      Team\n      Field Goal Percentage\n      Total Turnovers\n    \n  \n  \n    Kent State Golden Flashes\n31.9\n9\n    Indiana Hoosiers\n46.8\n7\n    Arizona State Sun Devils\n48.1\n13\n    TCU Horned Frogs\n35.5\n5\n    Montana State Bobcats\n46.3\n16\n    Kansas State Wildcats\n58.2\n14\n    Florida Atlantic Owls\n38.5\n9\n    Memphis Tigers\n43.1\n8\n    Drake Bulldogs\n40.0\n12\n    Miami Hurricanes\n30.4\n9\n    Grand Canyon Lopes\n43.1\n7\n    Gonzaga Bulldogs\n53.6\n12\n    Providence Friars\n36.2\n10\n    Kentucky Wildcats\n36.5\n11\n    Fairleigh Dickinson Knights\n38.7\n9\n    Purdue Boilermakers\n35.8\n16\n    Iona Gaels\n38.6\n6\n    UConn Huskies\n48.5\n9\n    NC State Wolfpack\n37.5\n6\n    Creighton Bluejays\n46.4\n8\n    Pittsburgh Panthers\n34.1\n15\n    Iowa State Cyclones\n23.3\n8\n    Vermont Catamounts\n43.4\n10\n    Marquette Golden Eagles\n51.8\n5\n    VCU Rams\n36.7\n14\n    Saint Mary's Gaels\n40.8\n12\n    UC Santa Barbara Gauchos\n46.9\n14\n    Baylor Bears\n54.9\n9\n    Kennesaw State Owls\n42.2\n11\n    Xavier Musketeers\n46.2\n10\n    USC Trojans\n41.4\n11\n    Michigan State Spartans\n48.1\n7\n    Penn State Nittany Lions\n48.2\n8\n    Texas A&M Aggies\n33.9\n10\n    UNC Asheville Bulldogs\n37.3\n16\n    UCLA Bruins\n54.0\n8\n    Louisiana Ragin' Cajuns\n40.0\n14\n    Tennessee Volunteers\n45.7\n18\n    Northern Kentucky Norse\n27.5\n7\n    Houston Cougars\n49.0\n17\n    Colgate Raiders\n43.1\n11\n    Texas Longhorns\n53.4\n13\n    Boise State Broncos\n40.0\n9\n    Northwestern Wildcats\n49.1\n7\n    Oral Roberts Golden Eagles\n30.2\n9\n    Duke Blue Devils\n48.4\n8\n    Auburn Tigers\n46.0\n7\n    Iowa Hawkeyes\n41.2\n8\n    Illinois Fighting Illini\n38.5\n17\n    Arkansas Razorbacks\n38.1\n11\n    Princeton Tigers\n40.6\n11\n    Arizona Wildcats\n42.1\n13\n    Charleston Cougars\n32.1\n10\n    San Diego State Aztecs\n42.9\n14\n    Texas A&M-Corpus Christi Islanders\n34.7\n6\n    Alabama Crimson Tide\n47.1\n8\n    Howard Bison\n38.8\n18\n    Kansas Jayhawks\n52.1\n12\n    Utah State Aggies\n47.5\n15\n    Missouri Tigers\n50.9\n10\n    Furman Paladins\n39.3\n9\n    Virginia Cavaliers\n44.4\n8\n    West Virginia Mountaineers\n39.3\n12\n    Maryland Terrapins\n51.1\n13\n  \n  \n    \n      By: Kylee Sodomka\n    \n  \n  \n\n\n\n\nSince I compared rolling turnovers and field goal percentage, I decided to look at those for both teams during the First Round games. First and foremost, Gonzaga. They won (thank goodness), and they’re the team my code predicted to go all the way. Their field goal percentage that game against the Grand Canyon Lopes was 53.6%. That’s not too far off of their predicted field goal percentage. While Grand Canyon was supposed to have a closer field goal percentage, Gonzaga won and that’s all that matters for my bracket. Surprisingly, Gonzaga did have more turnovers than Grand Canyon. Good thing it didn’t affect the outcome I needed.\nNow, what happened that my greatest losses became a reality and not just a fever dream. Purdue was supposed to dominate. Their field goal percentage? 35.8%. What? Number of turnovers they committed: 16. WHAT?! Are you kidding me? It became a vice-versa situation when it came to turnovers. When it comes to field goal percentage, Colgate should’ve dominated. However, Texas proved why they were the number 2 seed in their region. Their field goal percentage was at 53.4%, compared to Colgate’s 43.1%. Big, big yikes.\nSomething I’ve learned from class and from the games I’ve watched is the strength of a team’s schedule. Obviously, the teams I picked did well in their conference. But if they played teams like Doane during the year, I would hope they do well. Putting them up against teams like Texas and Duke is not good. If teams play real competition all year, they’re ready for March. The stats are impressive, but they’re just stats. A lot of factors go into a team’s win or loss, and a lot of those things can’t really be put into stats (what effect did PBA have on our men’s team this year that got them to a .500 season)? All I can really do now is hope and pray that Gonzaga pulls this thing out.\nMaybe next year Purdue will make it far next year, but you can bet that I won’t be putting them too high. I learned that much at least.\n\n\n\nMy Northwest Regional Bracket\n\n\n\n\n\nMy Southwest Regional Bracket\n\n\n\n\n\nMy Northeast Regional Bracket\n\n\n\n\n\nMy Southeast Regional Bracket\n\n\n\n\n\nMy Final Four Bracket"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "I tried predicting college basketball without watching college basketball\n\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2023\n\n\nKylee Sodomka\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 21, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 18, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]